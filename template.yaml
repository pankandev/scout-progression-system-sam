AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  pps-api

  Personal Progression System for the Guides and Scouts movement.

Globals:
  Function:
    Timeout: 3

Resources:
  PPSAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: PPSAPI
      StageName: !Ref Version
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"
      Auth:
        Authorizers:
          BeneficiariesAuthorizer:
            UserPoolArn: !GetAtt BeneficiariesPool.Arn
          ScoutersAuthorizer:
            UserPoolArn: !GetAtt ScoutersPool.Arn
  # Core Layer
  PPSCore:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: PPSCore
      Description: Core of the Personal Progression System
      CompatibleRuntimes:
        - python3.8
      ContentUri: pps/core-layer/
  # Cognito
  BeneficiariesPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: BeneficiariesUsers
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
  ScoutersPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: ScoutersUsers
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
  # Database
  BeneficiariesTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: unit
          AttributeType: S
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: unit
          KeyType: HASH
        - AttributeName: code
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: beneficiaries
    Type: AWS::DynamoDB::Table
  DistrictsTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: code
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: districts
    Type: AWS::DynamoDB::Table
  GroupsTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: district
          AttributeType: S
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: district
          KeyType: HASH
        - AttributeName: code
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TableName: groups
    Type: AWS::DynamoDB::Table
  ObjectivesTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: unit-stage
          AttributeType: S
        - AttributeName: code # area-line
          AttributeType: S
      KeySchema:
        - AttributeName: unit-stage
          KeyType: HASH
        - AttributeName: code
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 1
      TableName: objectives
    Type: AWS::DynamoDB::Table
  ScoutersTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: group
          AttributeType: S
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: group
          KeyType: HASH
        - AttributeName: code
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 3
      TableName: scouters
    Type: AWS::DynamoDB::Table
  TasksTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: beneficiary
          AttributeType: S
        - AttributeName: creationdateuuid
          AttributeType: S
      KeySchema:
        - AttributeName: beneficiary
          KeyType: HASH
        - AttributeName: creationdateuuid
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: tasks
    Type: AWS::DynamoDB::Table

  # App
  DistrictsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pps/districts/
      Handler: app.handler
      Runtime: python3.8
      Layers:
        - !Ref PPSCore
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref DistrictsTable
      Events:
        ListDistricts:
          Type: Api
          Properties:
            Path: /api/districts/
            Method: get
        GetDistrict:
          Type: Api
          Properties:
            Path: /api/districts/{district}/
            Method: get
  GroupsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pps/groups/
      Handler: app.handler
      Runtime: python3.8
      Layers:
        - !Ref PPSCore
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref GroupsTable
        - DynamoDBReadPolicy:
            TableName:
              !Ref DistrictsTable
      Events:
        ListGroups:
          Type: Api
          Properties:
            Path: /api/districts/{district}/groups/
            Method: get
        GetGroup:
          Type: Api
          Properties:
            Path: /api/districts/{district}/groups/{group}/
            Method: get
  ObjectivesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pps/objectives/
      Handler: app.handler
      Runtime: python3.8
      Layers:
        - !Ref PPSCore
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref ObjectivesTable
      Events:
        GetObjective:
          Type: Api
          Properties:
            Path: /api/objectives/{unit}/{stage}/{area}/{line}/
            Method: get
        ListObjectives:
          Type: Api
          Properties:
            Path: /api/objectives/{unit}/{stage}/
            Method: get
  ScoutersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pps/scouters/
      Handler: app.handler
      Runtime: python3.8
      Layers:
        - !Ref PPSCore
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref ScoutersTable
      Events:
        GetScouter:
          Type: Api
          Properties:
            Path: /api/districts/{district}/groups/{group}/scouters/{code}
            Method: get
        ListScouters:
          Type: Api
          Properties:
            Path: /api/districts/{district}/groups/{group}/scouters/
            Method: get
  BeneficiariesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pps/beneficiaries/
      Handler: app.handler
      Runtime: python3.8
      Layers:
        - !Ref PPSCore
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref BeneficiariesTable
      Events:
        ListBeneficiaries:
          Type: Api
          Properties:
            Path: /api/districts/{district}/groups/{group}/beneficiaries/{unit}/
            Method: get
        GetBeneficiary:
          Type: Api
          Properties:
            Path: /api/districts/{district}/groups/{group}/beneficiaries/{unit}/{code}/
            Method: get
        CreateBeneficiary:
          Type: Api
          Properties:
            Path: /api/districts/{district}/groups/{group}/beneficiaries/{unit}/
            Method: post


Outputs:
  AppAPI:
    Description: "API Gateway endpoint URL for Prod stage for PPS API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/"
  DistrictsFunction:
    Description: "Districts Lambda Function ARN"
    Value: !GetAtt DistrictsFunction.Arn
  DistrictsFunctionIamRole:
    Description: "Implicit IAM Role created for the districts service"
    Value: !GetAtt DistrictsFunctionRole.Arn
  GroupsFunction:
    Description: "Groups Lambda Function ARN"
    Value: !GetAtt GroupsFunction.Arn
  GroupsFunctionIamRole:
    Description: "Implicit IAM Role created for the groups service"
    Value: !GetAtt GroupsFunctionRole.Arn
  ObjectivesFunction:
    Description: "Objectives Lambda Function ARN"
    Value: !GetAtt ObjectivesFunction.Arn
  ObjectivesFunctionIamRole:
    Description: "Implicit IAM Role created for the objectives service"
    Value: !GetAtt ObjectivesFunctionRole.Arn
  ScoutersFunction:
    Description: "Scouters Lambda Function ARN"
    Value: !GetAtt ScoutersFunction.Arn
  ScoutersFunctionIamRole:
    Description: "Implicit IAM Role created for the scouters service"
    Value: !GetAtt ScoutersFunctionRole.Arn
