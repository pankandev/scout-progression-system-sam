AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  pps-api

  Personal Progression System for the Guides and Scouts movement.

Globals:
  Function:
    Timeout: 3

Resources:
  # Core Layer
  PPSCore:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: PPSCore
      Description: Core of the Personal Progression System
      CompatibleRuntimes:
        - python3.8
      ContentUri: pps/core/
    Metadata:
      BuildMethod: python3.8
  # Database
  BeneficiariesTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: group
          AttributeType: S
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: group
          KeyType: HASH
        - AttributeName: code
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: beneficiaries
    Type: AWS::DynamoDB::Table
  DistrictTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: code
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: district
    Type: AWS::DynamoDB::Table
  GroupTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: district
          AttributeType: S
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: district
          KeyType: HASH
        - AttributeName: code
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TableName: group
    Type: AWS::DynamoDB::Table
  ObjectivesTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: area
          AttributeType: S
        - AttributeName: line
          AttributeType: N
      KeySchema:
        - AttributeName: area
          KeyType: HASH
        - AttributeName: line
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 1
      TableName: objectives
    Type: AWS::DynamoDB::Table
  ScouterTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: group
          AttributeType: S
        - AttributeName: code
          AttributeType: S
      KeySchema:
        - AttributeName: group
          KeyType: HASH
        - AttributeName: code
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 3
      TableName: scouter
    Type: AWS::DynamoDB::Table
  TasksTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: beneficiary
          AttributeType: S
        - AttributeName: creationdateuuid
          AttributeType: S
      KeySchema:
        - AttributeName: beneficiary
          KeyType: HASH
        - AttributeName: creationdateuuid
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName: tasks
    Type: AWS::DynamoDB::Table

  # App
  DistrictsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pps/districts/
      Handler: app.handler
      Runtime: python3.8
      Layers:
        - !Ref PPSCore
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref DistrictTable
      Events:
        ListDistricts:
          Type: Api
          Properties:
            Path: /districts/
            Method: get
        GetDistrict:
          Type: Api
          Properties:
            Path: /districts/{district}/
            Method: get
  GroupsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: pps/groups/
      Handler: app.handler
      Runtime: python3.8
      Layers:
        - !Ref PPSCore
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              !Ref GroupTable
        - DynamoDBReadPolicy:
            TableName:
              !Ref DistrictTable
      Events:
        ListGroups:
          Type: Api
          Properties:
            Path: /districts/{district}/groups/
            Method: get
        CreateGroup:
          Type: Api
          Properties:
            Path: /districts/{district}/groups/
            Method: post
        GetGroup:
          Type: Api
          Properties:
            Path: /districts/{district}/groups/{group}/
            Method: get
        UpdateGroup:
          Type: Api
          Properties:
            Path: /districts/{district}/groups/{group}/
            Method: patch
        DeleteGroup:
          Type: Api
          Properties:
            Path: /districts/{district}/groups/{group}/
            Method: delete


Outputs:
  AppAPI:
    Description: "API Gateway endpoint URL for Prod stage for PPS API"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/api/"
  DistrictsFunction:
    Description: "Districts Lambda Function ARN"
    Value: !GetAtt DistrictsFunction.Arn
  DistrictsFunctionIamRole:
    Description: "Implicit IAM Role created for the districts service"
    Value: !GetAtt DistrictsFunctionRole.Arn
  GroupsFunction:
    Description: "Groups Lambda Function ARN"
    Value: !GetAtt GroupsFunction.Arn
  GroupsFunctionIamRole:
    Description: "Implicit IAM Role created for the groups service"
    Value: !GetAtt GroupsFunctionRole.Arn
